  
  [1X2 [33X[0;0YWeyl modules[133X[101X
  
  [33X[0;0YThis  chapter discusses the commands available for computations (in positive
  characteristic  [23Xp[123X)  with  Weyl modules, quotient Weyl modules, submodules of
  Weyl modules, and submodules of quotient Weyl modules.[133X
  
  [33X[0;0YWARNING. In most cases, the dimension of space of maximal vectors of a given
  dominant  weight  is  either [23X0[123X or [23X1[123X. Cases for which there exist two or more
  independent  maximal  vectors  of the same weight can lead to complications,
  such  as  a lack of rigidity in the submodule structure. Such situations are
  relatively  rare (and interesting); the smallest example known to the author
  occurs  in  Type  [23XD_4[123X  in  the  Weyl  module of highest weight [23X[0,1,0,0][123X, as
  pointed  out  on  page  173 of [CPS75]. (I am grateful to Anton Cox for this
  reference.)[133X
  
  [33X[0;0YA  Weyl module (as in the previous paragraph) with at least one weight space
  containing   multiple  (linearly  independent)  maximal  vectors  is  called
  [13Xambiguous[113X. Extra care is needed when studying ambiguous Weyl modules.[133X
  
  
  [1X2.1 [33X[0;0YCreating Weyl modules[133X[101X
  
  [33X[0;0YThere are two functions for creating a Weyl module.[133X
  
  WeylModule( p, wt, type, rank )
  WeylModule( V, wt )
  
  [33X[0;0YIn both forms [3Xwt[103X is the highest weight of the Weyl module. The function with
  four  arguments  specifies  the  characteristic  [3Xp[103X,  the root system [3Xtype[103X (a
  letter  in  the  range  A--G)  and  its  [3Xrank[103X.  In the second form, with two
  arguments,  the  function gets the characteristic and underlying root system
  from an existing Weyl module [3XV[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(3, [3,4], "A", 2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 4 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XW:= WeylModule(V, [3,0]);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThere is also a category of Weyl modules.[133X
  
  IsWeylModule( V )
  
  [33X[0;0YThis returns true if [3XV[103X is a Weyl module and returns false otherwise.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsWeylModule(W);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsWeylModule(4);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  
  [1X2.2 [33X[0;0YCreating quotient Weyl modules[133X[101X
  
  [33X[0;0YQuotients  of  an  existing  Weyl  module  by a submodule are supported. See
  Section [14X2.3[114X below for methods that create submodules.[133X
  
  QuotientWeylModule( S )
  DefiningKernel( Q )
  
  [33X[0;0YThe  first  function returns the quotient module [3XV[103X/[3XS[103X, where [3XV[103X is the ambient
  Weyl  module of which [3XS[103X is a submodule. In the latter function, [3XQ[103X must be an
  existing quotient Weyl module and its kernel (a submodule) is returned.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XQ := QuotientWeylModule(D);[127X[104X
    [4X[28X<Quotient of Type G2 Weyl module of highest weight [ 2, 0 ] at prime p = 2>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the  above,  it  is  assumed  that [23XD[123X is the submodule constructed in the
  second example of Section [14X2.3[114X below.[133X
  
  [33X[0;0YThere is also a category of quotient Weyl modules.[133X
  
  gap> IsQuotientWeylModule( Q )
  
  [33X[0;0Ywhich  returns  true  if  [23XQ[123X  is  a  quotient  Weyl module, and returns false
  otherwise.[133X
  
  
  [1X2.3 [33X[0;0YCreating submodules[133X[101X
  
  [33X[0;0YThe  [5XWeylModules[105X  package  includes  support  for  working  with submodules.
  Submodules  of  ambient  modules  are  created by specifying either a single
  generator  or  a list of generators; in the latter case the submodule is the
  linear  sum  of  the  submodules  generated  by the vectors on the list. The
  ambient  module  can  be:  a Weyl module, a quotient of a Weyl module, or an
  existing submodule of either a Weyl module or a quotient Weyl module.[133X
  
  SubWeylModule( V, vec )
  SubWeylModule( V, lst )
  
  [33X[0;0YThis  returns  a submodule of the given ambient object [3XV[103X of one of the forms
  described above. If the second argument [3Xvec[103X is a vector, then it returns the
  submodule  of  [3XV[103X  generated by that vector. If the second argument is a list
  [3Xlst[103X then it returns the submodule generated by that list of vectors.[133X
  
  [33X[0;0YWARNING:  If  the  dimension of the ambient module is large, this can take a
  very long time.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,3],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y2*v0, y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0, [128X[104X
    [4X[28X  y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ][128X[104X
    [4X[25Xgap>[125X [27XList(m,Weight);[127X[104X
    [4X[28X[ [ 3, 3 ], [ 1, 4 ], [ 4, 1 ], [ 0, 3 ], [ 3, 0 ], [ 1, 1 ] ][128X[104X
    [4X[25Xgap>[125X [27XS := SubWeylModule(V, m[6]);[127X[104X
    [4X[28X<SubWeylModule of dimension 7, generated by elements [128X[104X
    [4X[28X[ y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ] of weights [ [ 1, 1 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XS2 := SubWeylModule(V, [m[4],m[5]]);[127X[104X
    [4X[28X<SubWeylModule of dimension 13, generated by elements [128X[104X
    [4X[28X[ y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0 ] of weights [ [ 0, 3 ], [ 3, 0 ] [128X[104X
    [4X[28X ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YAn existing submodule remembers its list of generators.[133X
  
  Generators( S )
  
  [33X[0;0Yreturns  the  list  of  generators used in creating the submodule [3XS[103X. Here, [3XS[103X
  must be either a sub Weyl module or a subquotient.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XGenerators(S2);[127X[104X
    [4X[28X[ y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the above example, it is assumed that [9XS2[109X is the submodule constructed in
  the preceding example.[133X
  
  [33X[0;0YThere is another function that creates submodules of an existing Weyl module
  or  quotient  Weyl module, as a direct sum of a list of existing submodules.
  The submodules in the list must be linearly independent.[133X
  
  SubWeylModuleDirectSum( V, lst )
  
  [33X[0;0YThis  returns the direct sum of the given list of submodules, as a submodule
  of the ambient module [3XV[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(2,[2,0],"G",2);[127X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 2, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y4*v0 ][128X[104X
    [4X[25Xgap>[125X [27XList(m,Weight);[127X[104X
    [4X[28X[ [ 2, 0 ], [ 0, 1 ], [ 1, 0 ] ][128X[104X
    [4X[25Xgap>[125X [27XS1 := SubWeylModule(V,m[2]);[127X[104X
    [4X[28X<SubWeylModule of dimension 14, generated by elements [ y1*v0 ] of weights [128X[104X
    [4X[28X[ [ 0, 1 ] ]>, in[128X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 2, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XS2 := SubWeylModule(V,m[3]);[127X[104X
    [4X[28X<SubWeylModule of dimension 6, generated by elements [ y4*v0 ] of weights [128X[104X
    [4X[28X[ [ 1, 0 ] ]>, in[128X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 2, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XD := SubWeylModuleDirectSum(V,[S1,S2]);[127X[104X
    [4X[28X<SubWeylModule of dimension 20, generated by elements [128X[104X
    [4X[28X[ y1*v0, y4*v0 ] of weights [ [ 0, 1 ], [ 1, 0 ] ]>, in[128X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 2, 0 ] at prime p = 2>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the above example, the given Weyl module of type [23XG_2[123X in characteristic [23X2[123X
  has two maximal vectors of different weights in the socle, so it is possible
  to  form  the  direct sum of the submodules thay generate. In this case, the
  direct  sum coincides with the socle. (The [9XSocleWeyl[109X command calls the above
  to produce the socle directly.)[133X
  
  [33X[0;0YWe also have categories of submodules.[133X
  
  IsSubWeylModule ( X )
  IsSubQuotientWeylModule( X )
  
  [33X[0;0YThese functions return true if the object is a submodule of an existing Weyl
  module  or  existing  quotient  Weyl  module, respectively, and return false
  otherwise.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsSubWeylModule(D);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsSubQuotientWeylModule(D);[127X[104X
    [4X[28Xfalse[128X[104X
  [4X[32X[104X
  
  [33X[0;0YHere, we assume that [23XD[123X is as defined in the preceding example.[133X
  
  
  [1X2.4 [33X[0;0YWeights and weight spaces[133X[101X
  
  [33X[0;0YThe  following  functions  are  available  for  computing weights and weight
  spaces in a given Weyl module, quotient, submodule, or subquotient.[133X
  
  Weight( vec )
  Weights( V )
  DominantWeights( V )
  WeightSpaces( V )
  DominantWeightSpaces( V )
  WeightSpace( V, wt )
  
  [33X[0;0YThe  function  [9XWeight[109X  returns  the  weight  of the given weight vector [3Xvec[103X.
  [9XWeights[109X  returns  a  list  of  all the weights of [3XV[103X, without multiplicities.
  [9XDominantWeights[109X  returns  a  list  of  all  the dominant weights of [3XV[103X, again
  without  multiplicities.  [9XWeightSpaces[109X  returns  a  list  consisting of each
  weight  followed  by  a basis of weight vectors for the corresponding weight
  space  in  [3XV[103X,  and  [9XWeightSpace[109X  returns a basis for the weight space of the
  given weight [3Xwt[103X.[133X
  
  [33X[0;0YIn  all  of these functions, [3XV[103X can be an existing Weyl module, quotient Weyl
  module, submodule, or subquotient.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(2, [1,0,0], "A", 3);[127X[104X
    [4X[28X<Type A3 Weyl module of highest weight [ 1, 0, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XWeights(V);[127X[104X
    [4X[28X[ [ 1, 0, 0 ], [ -1, 1, 0 ], [ 0, -1, 1 ], [ 0, 0, -1 ] ][128X[104X
    [4X[25Xgap>[125X [27XDominantWeights(V);[127X[104X
    [4X[28X[ [ 1, 0, 0 ] ][128X[104X
    [4X[25Xgap>[125X [27XWeightSpaces(V);[127X[104X
    [4X[28X[ [ 1, 0, 0 ], [ 1*v0 ], [ -1, 1, 0 ], [ y1*v0 ], [ 0, -1, 1 ], [ y4*v0 ],[128X[104X
    [4X[28X[ 0, 0, -1 ], [ y6*v0 ] ][128X[104X
    [4X[25Xgap>[125X [27XDominantWeightSpaces(V);[127X[104X
    [4X[28X[ [ 1, 0, 0 ], [ 1*v0 ] ][128X[104X
    [4X[25Xgap>[125X [27XWeightSpace(V, [-1,1,0]);[127X[104X
    [4X[28X[ y1*v0 ][128X[104X
    [4X[25Xgap>[125X [27XWeightSpace(V, [0,1,0]);[127X[104X
    [4X[28Xfail[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe  last  command prints [9Xfail[109X because there are no weight vectors of weight
  [0,1,0] in the indicated Weyl module.[133X
  
  
  [1X2.4-1 [33X[0;0YUsing [9XList[109X[101X[1X with [9XWeight[109X[101X[1X[133X[101X
  
  [33X[0;0YThe  builtin  [9XList[109X  function in [5XGAP[105X supports mapping with respect to another
  function  as  an  optional second argument. If [3Xlst[103X is a given list of weight
  vectors (for instance a basis of a module) then the function[133X
  
  List( lst, Weight )
  
  [33X[0;0Yreturns  a  list  of  the  weights of the vectors in [3Xlst[103X. In other words, it
  applies [9XWeight[109X to each element in [3Xlst[103X. This can be very handy.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XN := WeylModule(2,[1,0],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 1, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27Xbase := BasisVecs(N);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y3*v0 ][128X[104X
    [4X[25Xgap>[125X [27XList(base,Weight);[127X[104X
    [4X[28X[ [ 1, 0 ], [ -1, 1 ], [ 0, -1 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn  the  above,  we  compute a basis of weight vectors and the corresponding
  list of weights for the natural module of type [23XA_2[123X.[133X
  
  
  [1X2.5 [33X[0;0YMaximal vectors[133X[101X
  
  [33X[0;0YAs  mentioned  at  the  beginning  of  this chapter, the commands to compute
  maximal vectors are fundamental for the [5XWeylModules[105X package. The command has
  two  basic  forms.  In  both  forms, [3XV[103X is a given Weyl module, quotient Weyl
  module,  or  sub quotient Weyl module. In the second form, [3Xwt[103X is a specified
  (dominant) weight.[133X
  
  MaximalVectors( V )
  MaximalVectors( V, lst )
  
  [33X[0;0YThis  command  returns  a  list  of  maximal vectors in the specified weight
  space,  or,  if no weight is specified, a list of all the maximal vectors in
  the module.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,3],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y2*v0, y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0, [128X[104X
    [4X[28X  y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ][128X[104X
    [4X[25Xgap>[125X [27XList(m,Weight);[127X[104X
    [4X[28X[ [ 3, 3 ], [ 1, 4 ], [ 4, 1 ], [ 0, 3 ], [ 3, 0 ], [ 1, 1 ] ][128X[104X
    [4X[28Xm11 := MaximalVectors(V,[1,1]);[128X[104X
    [4X[28X[ y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThere  is  also  a function for testing a given vector in a Weyl module or a
  quotient Weyl module, to see if it is maximal or not.[133X
  
  IsMaximalVector( V, vec )
  
  [33X[0;0YThis  returns  true  of  the  given [3Xvec[103X is maximal in [3XV[103X, which can be a Weyl
  module or a quotient Weyl module, and returns false otherwise.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV;[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xm[5];[127X[104X
    [4X[28X-1*y1*y2^(2)*v0+y2*y3*v0[128X[104X
    [4X[25Xgap>[125X [27XIsMaximalVector(V,m[5]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe above assumes that [23XV[123X is the Weyl module defined in the previous example,
  and that [23Xm[123X is the list of its maximal vectors.[133X
  
  
  [1X2.6 [33X[0;0YAmbiguity[133X[101X
  
  [33X[0;0YRecall  from the beginning of this chapter that we defined an [13Xambiguous[113X Weyl
  module  to  be one which has a weight space containing at least two linearly
  independent  maximal  vectors. Extra care is needed when computing with such
  modules,  so the [9XMaximalVectors[109X function produces a warning message and tags
  the module as [9XAmbiguous[109X. Here is an example, which was found in [CPS75].[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(2,[0,1,0,0],"D",4);[127X[104X
    [4X[28X<Type D4 Weyl module of highest weight [ 0, 1, 0, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X***** WARNING: Ambiguous module detected *****[128X[104X
    [4X[28X[ 1*v0, y5*y10*v0+y6*y9*v0, y2*y11*v0+y5*y10*v0+y12*v0 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn such situations, the following commands can be used.[133X
  
  IsAmbiguous( V )
  AmbiguousMaxVecs( V )
  
  [33X[0;0YThe  first function, which returns true or false, checks to see if the given
  module  [3XV[103X  is  ambiguous. The second function returns a list of lists of the
  ambiguous  maximal  vectors  in the various ambiguous weight spaces. In both
  functions, [3XV[103X is a Weyl module, quotient, submodule. (WHY NOT subquotient??)[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XIsAmbiguous(V);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27Xm := AmbiguousMaxVecs(V);[127X[104X
    [4X[28X[ [ y5*y10*v0+y6*y9*v0, y2*y11*v0+y5*y10*v0+y12*v0 ] ][128X[104X
    [4X[25Xgap>[125X [27XList(m[1],Weight);[127X[104X
    [4X[28X[ [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ] ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YHere,  we  see  that [23XV[123X as above has two maximal vectors of weight zero. This
  means  that  the  space  of  homomorphisms from the trivial module into [23XV[123X is
  two-dimensional.[133X
  
  
  [1X2.7 [33X[0;0YBasis and dimension[133X[101X
  
  [33X[0;0YOne  can  compute  the  dimension  or  a basis of weight vectors for a given
  module.[133X
  
  Dim( V )
  BasisVecs( V )
  
  [33X[0;0YThis  returns the dimension and a list of weight vectors, resprectively. The
  module [3XV[103X must be a Weyl module, a submodule, a quotient, or a subquotient.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(2, [1,0], "G", 2);[127X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 1, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27Xb:= BasisVecs(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y3*v0, y4*v0, y5*v0, y6*v0, y1*y6*v0 ][128X[104X
    [4X[25Xgap>[125X [27XDim(V);[127X[104X
    [4X[28X7[128X[104X
  [4X[32X[104X
  
  
  [1X2.8 [33X[0;0YMiscellaneous commands[133X[101X
  
  [33X[0;0YThere  are  a  few  additional  commands  available  for  a Weyl module or a
  quotient Weyl module.[133X
  
  Generator( V )
  TheLieAlgebra( V )
  SimpleLieAlgGens( V )
  TheCharacteristic( V )
  
  [33X[0;0YThese  commands  respectively  return  the  generator,  the  underlying  Lie
  algebra,  a  list of the Lie algebra generators, and the characteristic. The
  third function is only available for a Weyl module (it is used internally by
  some of the other functions). The Lie algebra is the [13Xcharacteristic zero[113X Lie
  algebra  of  the  same  type as the underlying algebraic group. The module [3XV[103X
  must be either a Weyl module or a quotient Weyl module.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(2, [1,0], "G", 2);[127X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 1, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XTheLieAlgebra(V);[127X[104X
    [4X[28X<Lie algebra of dimension 14 over Rationals>[128X[104X
    [4X[25Xgap>[125X [27Xg:= Generator(V);[127X[104X
    [4X[28X1*v0[128X[104X
    [4X[25Xgap>[125X [27XTheCharacteristic(V);[127X[104X
    [4X[28X2[128X[104X
  [4X[32X[104X
  
