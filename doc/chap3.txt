  
  [1X3 [33X[0;0YCharacters and structure[133X[101X
  
  [33X[0;0YGiven  a Weyl module, one can compute certain structural information such as
  its  socle  series  or  its  unique  simple  quotient.  One can also compute
  characters   of  Weyl  modules,  quotients,  submodules,  and  subquotients.
  Characters of tensor products are also supported, in a limited way.[133X
  
  [33X[0;0YIn  particular,  it  is  possible to compute all the simple characters for a
  given  root  system  and characteristic, provided the modules do not get too
  large.  And  one  can  compute  the  decomposition  numbers for a given Weyl
  module, again assuming it is not too large.[133X
  
  
  [1X3.1 [33X[0;0YCharacters[133X[101X
  
  [33X[0;0YThe most basic command to compute the character of an existing module is the
  following.[133X
  
  Character( V )
  
  [33X[0;0YThis  returns  a  list  consisting  of  each  weight  of  [3XV[103X  followed by its
  corresponding  weight space dimension. The module [3XV[103X must be a Weyl module, a
  submodule, a quotient, or a subquotient.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(3, [3,0], "A", 2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XCharacter(V);[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ 1, 1 ], 1, [ 2, -1 ], 1, [ -1, 2 ], 1, [ 0, 0 ], 1, [128X[104X
    [4X[28X  [ -3, 3 ], 1, [ 1, -2 ], 1, [ -2, 1 ], 1, [ -1, -1 ], 1, [ 0, -3 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27XS:= MaximalSubmodule(V);[127X[104X
    [4X[28X<SubWeylModule of dimension 7, generated by elements [ y1*v0 ] of weights [128X[104X
    [4X[28X[ [ 1, 1 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XCharacter(S);[127X[104X
    [4X[28X[ [ 1, 1 ], 1, [ -1, 2 ], 1, [ 2, -1 ], 1, [ 0, 0 ], 1, [ -2, 1 ], 1, [128X[104X
    [4X[28X  [ 1, -2 ], 1, [ -1, -1 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27XCharacter(QuotientWeylModule(S));[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ -3, 3 ], 1, [ 0, -3 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YSimple  characters for a given highest (dominant) weight are computed by one
  of the following.[133X
  
  SimpleCharacter( p, wt, type, rk )
  SimpleCharacter( V, wt )
  
  [33X[0;0YThese return the simple character of the given highest weight. In the second
  form,  [3XV[103X must be an existing Weyl module, and the characteristic [3Xp[103X, the type
  [3Xtype[103X,  and  the  rank  [3Xrk[103X are looked up in [3XV[103X. (Note: In the second form, the
  highest weight [3Xwt[103X does not have to agree with the highest weight of [3XV[103X.)[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xchar:= SimpleCharacter(3, [3,0], "A", 2);[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ -3, 3 ], 1, [ 0, -3 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(2, [1,0], "G", 2);[127X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 1, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27Xchar := SimpleCharacter(V,[0,2]);[127X[104X
    [4X[28X[ [ 0, 2 ], 1, [ 6, -2 ], 1, [ 2, 0 ], 1, [ -2, 2 ], 1, [ -6, 4 ], 1, [128X[104X
    [4X[28X  [ 4, -2 ], 1, [ 0, 0 ], 2, [ 6, -4 ], 1, [ -4, 2 ], 1, [ 2, -2 ], 1, [128X[104X
    [4X[28X  [ -2, 0 ], 1, [ -6, 2 ], 1, [ 0, -2 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YCharacters can be multiplied. Given two characters (of modules) for the same
  root  system,  it is possible to compute the character of the tensor product
  of  the  modules. This is used internally in implementing Steinberg's tensor
  product theorem.[133X
  
  ProductCharacter( ch1, ch2 )
  
  [33X[0;0YReturns the product character.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[1,1],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 1, 1 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xch1 := SimpleCharacter(V,[0,1]);[127X[104X
    [4X[28X[ [ 0, 1 ], 1, [ 1, -1 ], 1, [ -1, 0 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27Xprod := ProductCharacter(ch1,ch1);[127X[104X
    [4X[28X[ [ 0, 2 ], 1, [ 1, 0 ], 2, [ -1, 1 ], 2, [ 2, -2 ], 1, [ 0, -1 ], 2, [128X[104X
    [4X[28X  [ -2, 0 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIt  is  possible  to  subtract  characters.  The  result is not in general a
  character.  The  function  [9XDecomposeCharacter[109X  uses character subtraction to
  decompose  a  given  character into its simple characters with multiplicity.
  This  is used internally by the [9XDecompositionNumbers[109X function to compute the
  decomposition numbers of a Weyl module.[133X
  
  DifferenceCharacter( ch1, ch2 )
  DecomposeCharater( ch, p, type, rk )
  
  [33X[0;0YThe  first  function  returns the virtual character of the difference of its
  inputs.   The  second  computes  the  decomposition  numbers  of  the  given
  charaacter  [3Xch[103X for the root system of type [3Xtype[103X, rank [3Xrk[103X, and characteristic
  [3Xp[103X.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd := DecomposeCharacter(prod,3,"A",2);[127X[104X
    [4X[28X[ [ 0, 2 ], 1, [ 1, 0 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[1,1],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 1, 1 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xdn := DecomposeCharacter(Character(V),3,"A",2);[127X[104X
    [4X[28X[ [ 1, 1 ], 1, [ 0, 0 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YIn the first example, [9Xprod[109X is the product character computed in the previous
  example;  thus  we have decomposed a tensor product. In the last example, [9Xdn[109X
  gives  the  decomposition numbers of the Weyl module of highest weight [1,1]
  in  characteristic  [23X3[123X.  (This  can  also  be  computed  more directly by the
  [9XDecompositionNumbers[109X function.)[133X
  
  
  [1X3.2 [33X[0;0YDecomposition numbers[133X[101X
  
  [33X[0;0YThe decomposition numbers of a given Weyl module can be computed.[133X
  
  DecompositionNumbers( V )
  
  [33X[0;0YThis  returns  a  list  consisting  of  each  highest  weight  of  a  simple
  composition  factor  followed  by its composition factor multiplicity. It is
  assumed  that [3XV[103X is an existing Weyl module. (There are other ways to compute
  this, so the function is provided as a convenience for the user.)[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,3],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XDecompositionNumbers(V);[127X[104X
    [4X[28X[ [ 3, 3 ], 1, [ 1, 4 ], 1, [ 4, 1 ], 1, [ 0, 3 ], 1, [ 3, 0 ], 1, [ 1, 1 ], [128X[104X
    [4X[28X  1, [ 0, 0 ], 2 ][128X[104X
  [4X[32X[104X
  
  
  [1X3.3 [33X[0;0YThe maximal submodule and simple quotient[133X[101X
  
  [33X[0;0YA  given  Weyl  module  [3XV[103X always has a unique maximal submodule. The package
  supports computing this important submodule.[133X
  
  MaximalSubmodule( V )
  
  [33X[0;0YThis returns the submodule generated by all proper submodules.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,0],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XS := MaximalSubmodule(V);[127X[104X
    [4X[28X<SubWeylModule of dimension 7, generated by elements [ y1*v0 ] of weights [128X[104X
    [4X[28X[ [ 1, 1 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
  [4X[32X[104X
  
  [33X[0;0YHere, the Weyl module is the third symmetric power of the natural module. It
  has  dimension  [23X10[123X.  The  maximal  submodule  makes a list of its generators
  available to the [9XGenerators[109X function for further computation.[133X
  
  [33X[0;0YLet's  check  that  the  difference  character of the Weyl character and its
  maximal submodule coincides with the corresponding simple character.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xd := DifferenceCharacter(Character(V),Character(S));[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ -3, 3 ], 1, [ 0, -3 ], 1 ][128X[104X
    [4X[25Xgap>[125X [27Xs := SimpleCharacter(3,[3,0],"A",2);[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ -3, 3 ], 1, [ 0, -3 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YWe  can  also  compute the corresponding simple quotient of [3XV[103X by its maximal
  submodule, as a quotient Weyl module. The general form is[133X
  
  SimpleQuotient( V )
  
  [33X[0;0YThis  returns  the  simple quotient of a Weyl module [3XV[103X by its unique maximal
  submodule.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,0],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XQ := SimpleQuotient(V);[127X[104X
    [4X[28X<Quotient of Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xch := Character(Q);[127X[104X
    [4X[28X[ [ 3, 0 ], 1, [ -3, 3 ], 1, [ 0, -3 ], 1 ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YNotice that this gives yet another way to calculate simple characters.[133X
  
  
  [1X3.4 [33X[0;0YThe socle series[133X[101X
  
  [33X[0;0YThe  package  supports computing the socle series of a given Weyl module, or
  of a given quotient Weyl module.[133X
  
  SocleSeries( V )
  
  [33X[0;0YThis  returns  the  socle  series,  as  a  list  of submodules (or a list of
  subquotients, if [3XV[103X is a quotient Weyl module).[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,0],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XSocleSeries(V);[127X[104X
    [4X[28X[ <SubWeylModule of dimension 7, generated by elements [ y1*v0 ] of weights [128X[104X
    [4X[28X    [ [ 1, 1 ] ]>, in[128X[104X
    [4X[28X    <Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3>, [128X[104X
    [4X[28X  <SubWeylModule of dimension 10, generated by elements [128X[104X
    [4X[28X    [ y1*v0, 1*v0 ] of weights [ [ 1, 1 ], [ 3, 0 ] ]>, in[128X[104X
    [4X[28X    <Type A2 Weyl module of highest weight [ 3, 0 ] at prime p = 3> ][128X[104X
  [4X[32X[104X
  
  [33X[0;0YThe socle series is computed by internally applying the following functions,
  which may be useful in other situations as well.[133X
  
  SocleWeyl( V )
  NextSocle( S )
  GensNextSocle( S )
  
  [33X[0;0YThe  first  function  returns the socle of its argument. The second function
  returns  the  next  socle  layer,  assuming  that [3XS[103X is a submodule. That is,
  [9XNextSocle[109X  returns  the  submodule  that maps onto the socle of the quotient
  [3XV[103X/[3XS[103X,  where  [3XV[103X  is  the ambient module. The third function returns a list of
  generators  of the next socle layer for the given submodule [3XS[103X. For the first
  two functions, [3XV[103X must be either a Weyl module or a quotient Weyl module. The
  third function is only available for a Weyl module.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27Xsoc := SocleWeyl(V);[127X[104X
    [4X[28X<SubWeylModule of dimension 7, generated by elements [128X[104X
    [4X[28X[ y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ] of weights [ [ 1, 1 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
  [4X[32X[104X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,3],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y2*v0, y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0, [128X[104X
    [4X[28X  y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ][128X[104X
    [4X[25Xgap>[125X [27XS := SubWeylModule(V,[m[4],m[5]]);[127X[104X
    [4X[28X<SubWeylModule of dimension 13, generated by elements [128X[104X
    [4X[28X[ y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0 ] of weights [ [ 0, 3 ], [ 3, 0 ] [128X[104X
    [4X[28X ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XN := NextSocle(S);[127X[104X
    [4X[28X<SubWeylModule of dimension 14, generated by elements [128X[104X
    [4X[28X[ y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0, y1*y2*y3^(2)*v0 ] of weights [128X[104X
    [4X[28X[ [ 0, 3 ], [ 3, 0 ], [ 0, 0 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xgens := GensNextSocle(S);[127X[104X
    [4X[28X[ y1*y2*y3^(2)*v0 ][128X[104X
  [4X[32X[104X
  
  
  [1X3.5 [33X[0;0YTesting membership[133X[101X
  
  [33X[0;0YIt  is  possible to test a given weight vector for membership in a submodule
  or a subquotient.[133X
  
  IsWithin( S, vec )
  
  [33X[0;0YThis returns true if the given vector [3Xvec[103X is in the submodule [3XS[103X, and returns
  false  otherwise.  The vector [3Xvec[103X must be in the ambient module. Here, [3XS[103X can
  be  either  a  submodule of a Weyl module, or a submodule of a quotient Weyl
  module.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(3,[3,3],"A",2);[127X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27XM := MaximalSubmodule(V);[127X[104X
    [4X[28X<SubWeylModule of dimension 57, generated by elements [128X[104X
    [4X[28X[ y1*v0, y2*v0, y1^(3)*y2^(3)*v0+y3^(3)*v0 ] of weights [128X[104X
    [4X[28X[ [ 1, 4 ], [ 4, 1 ], [ 0, 0 ] ]>, in[128X[104X
    [4X[28X<Type A2 Weyl module of highest weight [ 3, 3 ] at prime p = 3>[128X[104X
    [4X[25Xgap>[125X [27Xm := MaximalVectors(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y2*v0, y1^(2)*y2*v0, -1*y1*y2^(2)*v0+y2*y3*v0, [128X[104X
    [4X[28X  y1*y2*y3*v0+y1^(2)*y2^(2)*v0 ][128X[104X
    [4X[25Xgap>[125X [27XIsWithin(M,m[1]);[127X[104X
    [4X[28Xfalse[128X[104X
    [4X[25Xgap>[125X [27XIsWithin(M,m[2]);[127X[104X
    [4X[28Xtrue[128X[104X
    [4X[25Xgap>[125X [27XIsWithin(M, m[2]+2*m[3]);[127X[104X
    [4X[28Xtrue[128X[104X
  [4X[32X[104X
  
  
  [1X3.6 [33X[0;0YThe ambient module[133X[101X
  
  [33X[0;0YSubmodules  and  quotient modules remember the original ambient Weyl modules
  from which they were constructed. Subquotients, which are always constructed
  as  submodules  in  some  quotient Weyl module, know the ambient quotient in
  which  they  were  constructed.  The  following functions return the ambient
  module to make it available for further computations.[133X
  
  AmbientWeylModule( M )
  AmbientQuotient( S )
  
  [33X[0;0YIn the first function, [3XM[103X can be either a quotient Weyl module or a submodule
  of  a  Weyl  module,  and the ambient Weyl module is returned. In the second
  function,  [3XM[103X  must be a submodule of some existing quotient Weyl module, and
  the ambient quotient is returned.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV := WeylModule(2,[0,1,0,0],"D",4);[127X[104X
    [4X[28X<Type D4 Weyl module of highest weight [ 0, 1, 0, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XS := SocleWeyl(V);[127X[104X
    [4X[28X***** WARNING: Ambiguous module detected *****[128X[104X
    [4X[28X<SubWeylModule of dimension 2, generated by elements [128X[104X
    [4X[28X[ y5*y10*v0+y6*y9*v0, y2*y11*v0+y5*y10*v0+y12*v0 ] of weights [128X[104X
    [4X[28X[ [ 0, 0, 0, 0 ], [ 0, 0, 0, 0 ] ]>, in[128X[104X
    [4X[28X<Type D4 Weyl module of highest weight [ 0, 1, 0, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XAmbientWeylModule(S);[127X[104X
    [4X[28X<Type D4 Weyl module of highest weight [ 0, 1, 0, 0 ] at prime p = 2>[128X[104X
  [4X[32X[104X
  
  
  [1X3.7 [33X[0;0YActing on a vector[133X[101X
  
  [33X[0;0YIt  is  sometimes  useful  to  act  on  a  given vector by an element of the
  hyperalgebra  (algebra  of  distributions).  One  needs to use a builtin [5XGAP[105X
  function to construct elements of the hyperalgebra.[133X
  
  ActOn( V, u, vec )
  
  [33X[0;0YThis  returns  the  result, in the ambient module [3XV[103X, of letting [3Xu[103X act on the
  given vector [3Xvec[103X, where [3XV[103X is either a Weyl module or a quotient Weyl module.[133X
  
  [4X[32X  Example  [32X[104X
    [4X[25Xgap>[125X [27XV:= WeylModule(2, [1,0], "G", 2);[127X[104X
    [4X[28X<Type G2 Weyl module of highest weight [ 1, 0 ] at prime p = 2>[128X[104X
    [4X[25Xgap>[125X [27XL:= TheLieAlgebra(V);[127X[104X
    [4X[28X<Lie algebra of dimension 14 over Rationals>[128X[104X
    [4X[25Xgap>[125X [27Xb:= BasisVecs(V);[127X[104X
    [4X[28X[ 1*v0, y1*v0, y3*v0, y4*v0, y5*v0, y6*v0, y1*y6*v0 ][128X[104X
    [4X[25Xgap>[125X [27Xg:= LatticeGeneratorsInUEA(L);[127X[104X
    [4X[28X[ y1, y2, y3, y4, y5, y6, x1, x2, x3, x4, x5, x6, ( h13/1 ), ( h14/1 ) ][128X[104X
    [4X[25Xgap>[125X [27XActOn(V, g[1]^2 + g[7], b[1]);[127X[104X
    [4X[28X0*v0[128X[104X
    [4X[25Xgap>[125X [27XActOn(V, g[1]*g[6], b[1]);[127X[104X
    [4X[28Xy1*y6*v0[128X[104X
  [4X[32X[104X
  
  [33X[0;0YNote that [9XLatticeGeneratorsInUEA[109X is an existing [5XGAP[105X command.[133X
  
