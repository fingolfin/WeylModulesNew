#############################################################################
##
#W  submodule.gd          WeylModules GAP package              S.R. Doty
##
##  This file contains declarations for submodules of Weyl modules.
##
#############################################################################



#! @ChapterInfo Weyl_modules, Filters
#! @Group IsSubWeylModule
#! @Arguments V
DeclareCategory( "IsSubWeylModule", 
    CategoryCollections(IsLeftAlgebraModuleElement) );

#! @Description
#! The first form constructs the submodule of the given 
#! Weyl module $V$ generated by the given element $v$.
#! @Returns a SubWeylModule
#! @Arguments V,v
#! @Group SubWeylModule
#! @ChapterInfo Weyl_modules, Constructors
DeclareOperation( "SubWeylModule", [IsWeylModule,IsLeftAlgebraModuleElement]);

#! @Description
#! The second form constructs the submodule
#! generated by the given submodule $S$ and given element $v$.
#! @Arguments S,v
#! @Group SubWeylModule
#! @ChapterInfo Weyl_modules, Constructors
DeclareOperation( "SubWeylModule",
     [IsSubWeylModule,IsLeftAlgebraModuleElement]);

#! @Description
#! The third form constructs the submodule of the given 
#! Weyl module $V$ generated by the given element list of elements.
#! @Arguments V,list
#! @Group SubWeylModule
#! @ChapterInfo Weyl_modules, Constructors
DeclareOperation("SubWeylModule", [IsWeylModule,IsList]);

#! @Description
#! The fourth form constructs the submodule
#! generated by the given submodule $S$ and given list of elements.
#! @Arguments S,list
#! @Group SubWeylModule
#! @ChapterInfo Weyl_modules, Constructors
DeclareOperation("SubWeylModule", [IsSubWeylModule,IsList]);

#! @Description
#! The fifth form constructs the submodule of the Weyl module $V$
#! which is the direct sum of the given list of submodules (which are
#! assumed to be linearly independent, without checking).
#! @Arguments V,list
#! @Group SubWeylModule
#! @ChapterInfo Weyl_modules, Constructors
DeclareOperation("SubWeylModuleDirectSum", [IsWeylModule,IsList]);


DeclareAttribute( "IsAmbiguous", IsSubWeylModule );


DeclareAttribute( "AmbiguousMaxVecs", IsSubWeylModule );


DeclareOperation("Generators", [IsSubWeylModule]);


DeclareOperation("BasisVecs", [IsSubWeylModule]);


DeclareAttribute("Dim", IsSubWeylModule );


DeclareOperation("AmbientWeylModule", [IsSubWeylModule]);


DeclareOperation("TheCharacteristic", [IsSubWeylModule] );


DeclareAttribute("TheLieAlgebra", IsSubWeylModule );


DeclareAttribute("Weights", IsSubWeylModule );


DeclareAttribute("DominantWeights", IsSubWeylModule );


DeclareAttribute("WeightSpaces", IsSubWeylModule );


DeclareAttribute("Character", IsSubWeylModule );


DeclareAttribute("DominantWeightSpaces", IsSubWeylModule );


DeclareOperation("WeightSpace", [IsSubWeylModule,IsList]);

# The following command is not documented at this time
DeclareOperation("SubWeylModule", [IsWeylModule,IsPosInt,IsPosInt,IsList]);


DeclareOperation( "MaximalVectors", [IsSubWeylModule,IsList]);


DeclareAttribute( "MaximalVectors", IsSubWeylModule );


DeclareOperation( "IsWithin", [IsSubWeylModule,IsLeftAlgebraModuleElement]);


DeclareAttribute("SocleWeyl", IsWeylModule );


DeclareOperation("NextSocle", [IsSubWeylModule]);


DeclareOperation("GensNextSocle", [IsSubWeylModule]);


DeclareAttribute("DecompositionNumbers", IsSubWeylModule );


DeclareOperation("LengthTwoQuotient", [IsWeylModule,IsSubWeylModule] );


DeclareOperation("Extensions", [IsWeylModule,IsSubWeylModule] );
