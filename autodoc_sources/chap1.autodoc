@Chapter Introduction

This &GAP; Package supports digital computer computations with
Weyl modules for a given simple simply-connected algebraic group $G$
in positive characteristic $p$. Actually the group $G$ itself never
appears in any of the computations, which take place instead using the
**algebra of distributions** (also known as the **hyperalgebra**) of
$G$, taken over the prime field. One should refer to <Cite
Key="Jantzen"/> for the definition of the algebra of distributions,
and other basic definitions and properties related to Weyl modules.



The algorithms are based on the method of <Cite Key = "Irving"/> (see
also <Cite Key = "Xi"/>) and build on the existing Lie algebra
functionality in &GAP;. In principle, one can work with arbitrary
weights for an arbitrary (simple) root system; in practice, the
functionality is limited by the size of the objects being computed.
If your Weyl module has dimension in the thousands, you may have to
wait a very long time for certain computations to finish.

The package is possibly most useful for doing computations in
characteristic $p$, where $p$ is relatively small relative to the
Coxeter number.  The general theory of Weyl modules <Cite
Key="Jantzen"/> includes a number of basic properties that break down
(or are not known to hold) if the characteristic is too small. In such
cases, explicit computations are often useful.

Recall that a **maximal vector** is a weight vector which is killed by
the positive unipotent radical; equivalently, it is killed by the
positive part of the algebra of distributions.

The main technical idea underlying this package is the following fact:
computing all the maximal vectors in a given Weyl module $V$
classifies the nonzero Weyl modules $W$ for which a nonzero
homomorphism from $W$ into $V$ exists. Such homological information is
a powerful aid to understanding structural properties of the Weyl
module $V$. The implementation of this idea involves a brute force
search through each dominant weight space, examing all linear
combinations (over the prime field) and compiling a list of the ones
which are maximal. This exploits the pleasant fact that for Weyl
modules of small dimension, the weight spaces tend to be small enough
to be manageable.

Versions 1.0 and 1.1 of this package were released in 2009. Their
initial development was spurred by work on the paper <Cite
Key="BDM"/>.  The discovery of the first counterexample to Donkin's
tilting module conjecture, by Bendel, Nakano, Pillen, and Sobaje <Cite
Key="BNPS"/> motivated the author to make subsequent calculations that
led to the realization that the <K>SubmoduleStructure</K> function was
not reliable. This led to the development of Version 2.0, which
eliminates the unreliable command and adds a number of new functions
that extend the capabilities of the previous version.
 
Although most of the functions deal with the simple simply-connected
case, there are a few functions for dealing with Schur algebras and
symmetric groups. Those commands are limited in scope, and provided
mainly as a convenience.


@Chapter Weyl modules

This chapter discusses the commands available for computations (in
positive characteristic $p$) with Weyl modules, quotient Weyl modules,
submodules of Weyl modules, and submodules of quotient Weyl modules.
Here the underlying Lie algebra is simply-connected and simple.


WARNING. In most cases, the dimension of space of maximal vectors
of a given dominant weight is either $0$ or $1$. Cases for which there
exist two or more independent maximal vectors of the same weight can
lead to complications, such as a lack of rigidity in the submodule
structure.  Such situations are relatively rare (and interesting). 
An example in Type $D_4$ is the Weyl
module of highest weight $[0,1,0,0]$, as pointed out on page 173 of
<Cite Key = "CPS"/>. (I am grateful to Anton Cox for this reference.)

A Weyl module (as in the previous paragraph) with at least one weight
space containing multiple linearly independent maximal vectors is
called **ambiguous**. Extra care is needed when studying ambiguous
modules.


@Section Constructors
@SectionLabel Constructors
Here we consider functions that create Weyl modules, quotients of Weyl
modules, submodules of Weyl modules, and submodules of quotient Weyl
modules.

@Subsection Weyl modules
@BeginGroup WeylModule
@GroupTitle WeylModule
@EndGroup WeylModule

@Subsection Quotients
@BeginGroup QuotientWeylModule
@GroupTitle QuotientWeylModule
@EndGroup QuotientWeylModule

@Subsection Submodules
@BeginGroup SubWeylModule
@GroupTitle SubWeylModule
@EndGroup SubWeylModule

@Subsection Subquotients
@BeginGroup SubQuotientWeylModule
@GroupTitle SubQuotientWeylModule
@EndGroup SubQuotientWeylModule


@Section Filters
The following filters can be used to query whether or not the object $V$
has the indicated type. 

@Subsection IsWeylModule
@BeginGroup IsWeylModule
@GroupTitle IsWeylModule
@EndGroup IsWeylModule

@Subsection IsQuotientWeylModule
@BeginGroup IsQuotientWeylModule
@GroupTitle IsQuotientWeylModule
@EndGroup IsQuotientWeylModule

@Subsection IsSubWeylModule
@BeginGroup IsSubWeylModule
@GroupTitle IsSubWeylModule
@EndGroup IsSubWeylModule

@Subsection IsSubQuotientWeylModule
@BeginGroup IsSubQuotientWeylModule
@GroupTitle IsSubQuotientWeylModule
@EndGroup IsSubQuotientWeylModule

@Section Common operations
This section documents the operations and attributes that are common
to more than one type of Weyl module object. 


@Subsection all four types
@BeginGroup Common operations
@GroupTitle Operations common to all four types
@EndGroup Common operations


@Subsection three types
@BeginGroup three types
@GroupTitle Operations common to Weyl modules, submodules, and quotients
@EndGroup three types


@Subsection two types
@BeginGroup two types
@GroupTitle Operations on Weyl modules and their quotients
@EndGroup two types


@Section Unique operations
@SectionTitle Operations unique to Weyl modules
This section documents the operations that can only be applied to an
existing Weyl module $V$. These operations are not available for submodules,
quotients, or subquotients.

@Section Unique ops for quotients
@SectionTitle Operations unique to quotient Weyl modules

@Section Unique ops for submodules
@SectionTitle Operations unique to submodules

@Subsection TwoFactorQuotientsContaining
@BeginGroup TwoFactorQuotientsContaining
@GroupTitle Quotients of Weyl modules with two composition factors and given kernel
@EndGroup TwoFactorQuotientsContaining
